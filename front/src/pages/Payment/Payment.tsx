import { useEffect, useState, useRef } from "react";
import { useNavigate } from "react-router-dom";
import {
  Wrapper,
  PaymentWaiting,
  Result,
  ResultBox,
  ResultBoxInner,
  CardImg,
  Content,
  Record,
  Etc,
  DotNav,
  HomeBtn,
} from "./Payment.styles";

import { Swiper as SwiperInstance } from "swiper/types"; // Swiper 타입 불러오기
import { Swiper, SwiperSlide } from "swiper/react";
// import { Pagination } from 'swiper';  // Pagination 모듈을 swiper 패키지에서 불러오기
// import 'swiper/swiper-bundle.min.css';
import "./../../../node_modules/swiper/swiper-bundle.min.css";
// import './../../../node_modules/swiper/modules/pagination.min.css';

import cardImg1 from "./../../assets/image/cards/신용카드이미지/1_신한카드_Mr.Life.png";
import cardImg2 from "./../../assets/image/cards/신용카드이미지/12_올바른_FLEX_카드.png";
import { PATH } from "../../constants/path";
// import cardImg2 from "./../../assets/image/cards/신용카드이미지/34_American_Express®_Green_Card_Edition2.png"

// 테스트용 정보(추후 지울 예정)
const results = [
  {
    name: "신한카드 Mr.Life",
    img: cardImg1,
    rec: 253200, // 실적
    rec2: 3000000, // 전체 실적
    ad: 1200, //혜택
    sumad: 5600, // 혜택 누적 금액
  },
  {
    name: "신한카드 Mr.Life",
    img: cardImg1,
    rec: 253200, // 실적
    rec2: 3000000, // 전체 실적
    ad: 1200, //혜택
    sumad: 5600, // 혜택 누적 금액
  },
  {
    name: "올바른 Flex 카드",
    img: cardImg2,
    rec: 13200, // 실적
    rec2: 250000, // 전체 실적
    ad: 900, //혜택
    sumad: 2750, // 혜택 누적 금액
  },
];

// const result = results[1]

const Payment = () => {
  const nav = useNavigate();
  const [rotate, setRotate] = useState<boolean[]>(
    Array(results.length).fill(false)
  );
  const [isLoading, setIsLoading] = useState<boolean>(false);

  // DotNav를 위한 변수들
  const [swiperInstance, setSwiperInstance] = useState<SwiperInstance>(); // 초기값을 undefined로 설정
  const [activeIndex, setActiveIndex] = useState(0); // 화면에 띄워지고 있는 결과 페이지를 지정하기 위한 변수

  const handleNavClick = (index: number) => {
    swiperInstance?.slideTo(index); // swiperInstance가 존재할 때만 slideTo 호출
  };

  const currentYear = new Date().getFullYear(); // 현재 년도 가져오기
  const currentMonth = new Date().getMonth() + 1; // 월은 0부터 시작하기 때문에 +1

  const clickHomeBtn = () => {
    nav(PATH.HOME);
  };
  // 카드 가로, 세로 길이에 따른 회전 여부 판단 핸들러
  const handleImageLoad = (
    event: React.SyntheticEvent<HTMLImageElement, Event>,
    index: number
  ) => {
    const imgElement = event.currentTarget;

    // naturalWidth와 naturalHeight로 회전 여부 결정
    const shouldRotate = imgElement.naturalWidth < imgElement.naturalHeight;

    // 함수형 업데이트 사용하여 회전 상태를 업데이트
    setRotate((prevRotate) => {
      const newRotate = [...prevRotate];
      newRotate[index] = shouldRotate;
      return newRotate;
    });
  };

  return (
    <Wrapper>
      {isLoading ? (
        // 결제를 진행중일 경우
        <PaymentWaiting>
          <svg
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            width="98"
            height="98"
          >
            <path
              d="M0 0 C1.64510941 0.00015915 3.29022379 0.00585551 4.93530273 0.01586914 C6.23164894 0.01799156 6.23164894 0.01799156 7.55418396 0.02015686 C10.32578941 0.025773 13.09731528 0.0383282 15.86889648 0.05102539 C17.74324428 0.05603831 19.61759334 0.06060158 21.49194336 0.06469727 C26.09679192 0.07574767 30.70158069 0.09302309 35.30639648 0.11352539 C35.30639648 3.41352539 35.30639648 6.71352539 35.30639648 10.11352539 C36.95639648 10.11352539 38.60639648 10.11352539 40.30639648 10.11352539 C40.30639648 14.40352539 40.30639648 18.69352539 40.30639648 23.11352539 C38.65639648 23.44352539 37.00639648 23.77352539 35.30639648 24.11352539 C35.30639648 25.76352539 35.30639648 27.41352539 35.30639648 29.11352539 C36.95639648 29.11352539 38.60639648 29.11352539 40.30639648 29.11352539 C40.30639648 30.43352539 40.30639648 31.75352539 40.30639648 33.11352539 C41.58514648 32.90727539 42.86389648 32.70102539 44.18139648 32.48852539 C53.7733648 31.48279475 61.72176176 34.20563202 69.30639648 40.11352539 C75.56803584 46.37516475 78.36119819 53.78599983 78.74389648 62.55102539 C78.39198777 73.04963539 73.51362147 79.90630041 66.30639648 87.11352539 C72.24639648 87.44352539 78.18639648 87.77352539 84.30639648 88.11352539 C84.30639648 89.43352539 84.30639648 90.75352539 84.30639648 92.11352539 C51.96639648 92.11352539 19.62639648 92.11352539 -13.69360352 92.11352539 C-13.69360352 90.79352539 -13.69360352 89.47352539 -13.69360352 88.11352539 C-10.72360352 88.11352539 -7.75360352 88.11352539 -4.69360352 88.11352539 C-4.69360352 85.14352539 -4.69360352 82.17352539 -4.69360352 79.11352539 C-2.21860352 78.61852539 -2.21860352 78.61852539 0.30639648 78.11352539 C0.30639648 76.46352539 0.30639648 74.81352539 0.30639648 73.11352539 C-1.34360352 72.78352539 -2.99360352 72.45352539 -4.69360352 72.11352539 C-4.69360352 68.15352539 -4.69360352 64.19352539 -4.69360352 60.11352539 C-2.21860352 59.61852539 -2.21860352 59.61852539 0.30639648 59.11352539 C0.30639648 57.13352539 0.30639648 55.15352539 0.30639648 53.11352539 C-1.34360352 52.78352539 -2.99360352 52.45352539 -4.69360352 52.11352539 C-4.69360352 48.15352539 -4.69360352 44.19352539 -4.69360352 40.11352539 C-2.21860352 39.61852539 -2.21860352 39.61852539 0.30639648 39.11352539 C0.30639648 37.13352539 0.30639648 35.15352539 0.30639648 33.11352539 C-1.34360352 32.78352539 -2.99360352 32.45352539 -4.69360352 32.11352539 C-4.69360352 28.15352539 -4.69360352 24.19352539 -4.69360352 20.11352539 C-3.04360352 19.78352539 -1.39360352 19.45352539 0.30639648 19.11352539 C0.30639648 17.46352539 0.30639648 15.81352539 0.30639648 14.11352539 C-1.34360352 13.78352539 -2.99360352 13.45352539 -4.69360352 13.11352539 C-4.72046904 11.13443141 -4.73993727 9.15523568 -4.75610352 7.17602539 C-4.76770508 6.07387695 -4.77930664 4.97172852 -4.79125977 3.83618164 C-4.64133809 -0.34363465 -4.34430647 0.13352518 0 0 Z M0.30639648 4.11352539 C0.30639648 6.09352539 0.30639648 8.07352539 0.30639648 10.11352539 C10.53639648 10.11352539 20.76639648 10.11352539 31.30639648 10.11352539 C31.30639648 8.13352539 31.30639648 6.15352539 31.30639648 4.11352539 C21.07639648 4.11352539 10.84639648 4.11352539 0.30639648 4.11352539 Z M4.30639648 14.11352539 C4.30639648 15.76352539 4.30639648 17.41352539 4.30639648 19.11352539 C14.86639648 19.11352539 25.42639648 19.11352539 36.30639648 19.11352539 C36.30639648 17.46352539 36.30639648 15.81352539 36.30639648 14.11352539 C25.74639648 14.11352539 15.18639648 14.11352539 4.30639648 14.11352539 Z M0.30639648 24.11352539 C0.30639648 25.76352539 0.30639648 27.41352539 0.30639648 29.11352539 C10.53639648 29.11352539 20.76639648 29.11352539 31.30639648 29.11352539 C31.30639648 27.46352539 31.30639648 25.81352539 31.30639648 24.11352539 C21.07639648 24.11352539 10.84639648 24.11352539 0.30639648 24.11352539 Z M4.30639648 33.11352539 C4.30639648 35.09352539 4.30639648 37.07352539 4.30639648 39.11352539 C8.51449533 39.23009323 12.72217644 39.3009015 16.93139648 39.36352539 C18.12120117 39.39704102 19.31100586 39.43055664 20.53686523 39.46508789 C29.26134999 39.64688219 29.26134999 39.64688219 36.30639648 35.11352539 C36.30639648 34.45352539 36.30639648 33.79352539 36.30639648 33.11352539 C25.74639648 33.11352539 15.18639648 33.11352539 4.30639648 33.11352539 Z M27.48608398 47.36352539 C23.15952333 53.78173457 21.56836501 59.93362676 22.86889648 67.55102539 C24.77159539 74.89544318 29.11200065 81.11174795 35.52905273 85.18383789 C41.75390183 88.4399128 48.91916036 89.45507693 55.66967773 87.39086914 C63.25385282 84.24248049 68.56154534 79.92486064 72.32592773 72.56665039 C75.00789376 65.85639276 74.86833746 59.35937391 72.50561523 52.57055664 C69.18955355 45.77641071 63.92145935 40.35972346 56.78686523 37.70727539 C45.2768973 34.95213346 34.768144 37.81867837 27.48608398 47.36352539 Z M0.30639648 43.11352539 C0.30639648 45.09352539 0.30639648 47.07352539 0.30639648 49.11352539 C3.72241664 49.28799473 7.13729285 49.39442162 10.55639648 49.48852539 C12.00852539 49.56393555 12.00852539 49.56393555 13.48999023 49.64086914 C14.8918457 49.66987305 14.8918457 49.66987305 16.32202148 49.69946289 C17.18085938 49.73088379 18.03969727 49.76230469 18.92456055 49.79467773 C22.23289571 49.12661249 22.23289571 49.12661249 25.30639648 43.11352539 C17.05639648 43.11352539 8.80639648 43.11352539 0.30639648 43.11352539 Z M4.30639648 53.11352539 C4.30639648 55.09352539 4.30639648 57.07352539 4.30639648 59.11352539 C6.6188344 59.14037951 8.93135919 59.1598538 11.24389648 59.17602539 C13.17555664 59.19342773 13.17555664 59.19342773 15.14624023 59.21118164 C18.16938051 59.47885088 18.16938051 59.47885088 19.30639648 58.11352539 C19.30639648 56.46352539 19.30639648 54.81352539 19.30639648 53.11352539 C14.35639648 53.11352539 9.40639648 53.11352539 4.30639648 53.11352539 Z M0.30639648 63.11352539 C0.30639648 64.76352539 0.30639648 66.41352539 0.30639648 68.11352539 C6.57639648 68.11352539 12.84639648 68.11352539 19.30639648 68.11352539 C18.97639648 66.46352539 18.64639648 64.81352539 18.30639648 63.11352539 C12.36639648 63.11352539 6.42639648 63.11352539 0.30639648 63.11352539 Z M4.30639648 73.11352539 C4.30639648 74.76352539 4.30639648 76.41352539 4.30639648 78.11352539 C10.24639648 78.11352539 16.18639648 78.11352539 22.30639648 78.11352539 C21.64639648 76.46352539 20.98639648 74.81352539 20.30639648 73.11352539 C15.02639648 73.11352539 9.74639648 73.11352539 4.30639648 73.11352539 Z M0.30639648 82.11352539 C0.30639648 84.09352539 0.30639648 86.07352539 0.30639648 88.11352539 C10.86639648 88.11352539 21.42639648 88.11352539 32.30639648 88.11352539 C30.65639648 86.46352539 29.00639648 84.81352539 27.30639648 83.11352539 C26.97639648 82.78352539 26.64639648 82.45352539 26.30639648 82.11352539 C24.37972141 82.02604332 22.44987787 82.00655205 20.52124023 82.01586914 C19.35141602 82.0190918 18.1815918 82.02231445 16.97631836 82.02563477 C15.74461914 82.03401367 14.51291992 82.04239258 13.24389648 82.05102539 C12.00833008 82.05553711 10.77276367 82.06004883 9.49975586 82.06469727 C6.43525532 82.07652931 3.37084927 82.09301366 0.30639648 82.11352539 Z "
              fill="#FFFFFF"
              transform="translate(13.693603515625,2.886474609375)"
            />
            <path
              d="M0 0 C0.99 0.33 1.98 0.66 3 1 C3 1.66 3 2.32 3 3 C5.31 3.33 7.62 3.66 10 4 C9.67 5.32 9.34 6.64 9 8 C7.02 8 5.04 8 3 8 C3 9.65 3 11.3 3 13 C3.94875 13.103125 4.8975 13.20625 5.875 13.3125 C9 14 9 14 11 17 C11.54552912 23.10992617 11.54552912 23.10992617 9.8125 25.9375 C7.43958382 27.32851983 5.70313576 27.21917317 3 27 C3 27.99 3 28.98 3 30 C1.68 30 0.36 30 -1 30 C-1 29.01 -1 28.02 -1 27 C-2.98 27 -4.96 27 -7 27 C-7 25.68 -7 24.36 -7 23 C-5.02 23 -3.04 23 -1 23 C-1 21.02 -1 19.04 -1 17 C-1.763125 17.061875 -2.52625 17.12375 -3.3125 17.1875 C-6 17 -6 17 -7.8125 15.9375 C-9.67036623 12.90624457 -9.37133265 10.46577141 -9 7 C-7.35674426 4.40538567 -6.29740522 4.07608041 -3.3125 3.3125 C-2.549375 3.209375 -1.78625 3.10625 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z M-4 8 C-4.33 9.32 -4.66 10.64 -5 12 C-3.68 12.33 -2.36 12.66 -1 13 C-1 11.35 -1 9.7 -1 8 C-1.99 8 -2.98 8 -4 8 Z M3 17 C3 18.98 3 20.96 3 23 C4.32 22.67 5.64 22.34 7 22 C6.73323796 20.01508358 6.73323796 20.01508358 6 18 C5.01 17.67 4.02 17.34 3 17 Z "
              fill="#FFFFFF"
              transform="translate(61,50)"
            />
            <path
              d="M0 0 C0.99 0 1.98 0 3 0 C3.55100674 6.61208091 2.90658806 11.52153036 -1 17 C-5.3578059 21.99002645 -10.48736911 24.78268582 -17 26 C-20.0625 25.6875 -20.0625 25.6875 -22 25 C-21.67 23.68 -21.34 22.36 -21 21 C-20.41992188 20.90203125 -19.83984375 20.8040625 -19.2421875 20.703125 C-14.02988543 19.70539061 -10.07331132 18.59967047 -6 15 C-2.94693366 10.37505792 -1.3342112 5.3368448 0 0 Z "
              fill="#FFFFFF"
              transform="translate(82,63)"
            />
            <path
              d="M0 0 C0 1.32 0 2.64 0 4 C-1.10408203 4.25523438 -1.10408203 4.25523438 -2.23046875 4.515625 C-10.99535374 6.58520188 -10.99535374 6.58520188 -17.14453125 12.82421875 C-19.29671004 16.81677657 -20.54429281 20.44292809 -21 25 C-22.32 25 -23.64 25 -25 25 C-25.45441402 18.63820367 -24.75418752 14.25376521 -21 9 C-14.73544998 2.21562562 -9.33928827 -0.37357153 0 0 Z "
              fill="#FFFFFF"
              transform="translate(64,42)"
            />
          </svg>
          <div>
            <span>결</span>
            <span>제</span>
            <span>를</span>
            <span> </span>
            <span>진</span>
            <span>행</span>
            <span>중</span>
            <span> </span>
            <span>입</span>
            <span>니</span>
            <span>다</span>
            <span>.</span>
            <span>.</span>
            <span>.</span>
          </div>
        </PaymentWaiting>
      ) : (
        // 결제가 완료되었을 경우(받은 혜택 및 누적 실적 보여주는 화면)
        <Result>
          <ResultBox>
            <Swiper
              onSwiper={(swiper) => setSwiperInstance(swiper)} // Swiper 인스턴스 저장
              onSlideChange={(swiper) => setActiveIndex(swiper.activeIndex)} // 슬라이드 변경 시 인덱스 업데이트
              spaceBetween={50}
              slidesPerView={1}
            >
              {results.map((result, index) => (
                <SwiperSlide key={index}>
                  <ResultBoxInner>
                    <div>{result.name}</div>
                    <CardImg
                      style={{
                        paddingTop: rotate[index] ? "20px" : "60px",
                        paddingBottom: rotate[index] ? "0px" : "30px",
                      }}
                    >
                      <img
                        onLoad={(event) => handleImageLoad(event, index)} // 이미지가 로드되면 handleImageLoad 호출
                        style={{
                          visibility:
                            rotate[index] !== undefined ? "visible" : "hidden", // 로드 완료되면 표시
                          // position: "absolute", 19 30 38 60 9.5 15
                          width: rotate[index] ? "133px" : "210px", // 회전 여부에 따라 width와 height 변경
                          height: rotate[index] ? "210px" : "133px",
                          transform: rotate[index] ? "rotate(-90deg)" : "none", // 회전시키기
                          // marginLeft: rotate ? "17.5px" : "0",
                          borderRadius: "10px",
                          boxShadow: rotate[index]
                            ? "-6px 0px 5px rgba(0, 0, 0, 0.3)"
                            : "0px 6px 5px rgba(0, 0, 0, 0.3)", // 이미지에 그림자 추가
                        }}
                        src={result.img}
                        alt={result.name}
                      />
                    </CardImg>
                    <Content>
                      <Record>
                        <div>실적</div>
                        <div>
                          {result.rec.toLocaleString()} /{" "}
                          {result.rec2.toLocaleString()}원
                        </div>
                      </Record>
                      <Record>
                        <div>혜택 금액</div>
                        <div>{result.ad.toLocaleString()}원</div>
                      </Record>
                      <Etc>
                        <div>
                          {currentMonth}월동안 총{" "}
                          {result.sumad.toLocaleString()}원의
                        </div>
                        <div>혜택을 받았어요!</div>
                      </Etc>
                    </Content>
                  </ResultBoxInner>
                </SwiperSlide>
              ))}
            </Swiper>
            {/* 하단 네브바 (점) */}
            <DotNav>
              {results.map((_, index) => (
                <span
                  key={index}
                  onClick={() => handleNavClick(index)}
                  style={{
                    backgroundColor: activeIndex === index ? "black" : "gray",
                  }}
                ></span>
              ))}
            </DotNav>
          </ResultBox>

          <HomeBtn onClick={clickHomeBtn}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              x="0px"
              y="0px"
              fill="white"
              width="60"
              height="60"
              viewBox="0 0 24 24"
            >
              <path d="M 12 2 A 1 1 0 0 0 11.289062 2.296875 L 1.203125 11.097656 A 0.5 0.5 0 0 0 1 11.5 A 0.5 0.5 0 0 0 1.5 12 L 4 12 L 4 20 C 4 20.552 4.448 21 5 21 L 9 21 C 9.552 21 10 20.552 10 20 L 10 14 L 14 14 L 14 20 C 14 20.552 14.448 21 15 21 L 19 21 C 19.552 21 20 20.552 20 20 L 20 12 L 22.5 12 A 0.5 0.5 0 0 0 23 11.5 A 0.5 0.5 0 0 0 22.796875 11.097656 L 12.716797 2.3027344 A 1 1 0 0 0 12.710938 2.296875 A 1 1 0 0 0 12 2 z"></path>
            </svg>
            <div>홈으로</div>
          </HomeBtn>
        </Result>
      )}
    </Wrapper>
  );
};

export default Payment;
